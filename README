== Readme for development snapshot 20230930

- revisit resistor short condition handling
- fix uninitialised access in getlines
- fix a mem leak in ternary op
- add CS::reset_fail
- parse string in angle brackets

== Readme for development snapshot 20230729

This is a development snapshot

- white space in quoted strings
- escaped chars in quoted strings
- more testing and interactive testing
- typed NOT_INPUT override
- version presented at fsic23

== Readme for development snapshot 20230623

This is a development snapshot addressing expression handling.

- ternary operator
- modulo binary operator
- quoted strings

== Readme for development snapshot 20230520

This is a development snapshot.

- param eval recursion bugfix
- allow '$' in identifiers
- add man pages from Debian

== Readme for development snapshot 20230214

This is a development snapshot. Related to Verilog-AMS work.

- module overloading interface
- allow '$' in identifiers
- explicitly specify c++11 during build
- move COMPONENT::_value to ELEMENT
- ELEMENT cleanup and parameter sweeps
- "override" decorators
- more scope flexibility in commands
- fix case insensitivity in label compare

== Readme for development snapshot 2013-04-23

This is a development snapshot.  As such, there may be problems due to
new work.

This snapshot splits the code into sections "lib", "apps", "main".

"main" is a simple main program "gnucap" that dynamically links to
libgnucap.

"lib" is the core library "libgnucap.so", required for all programs in
the gnucap collection.  This library can also be used with different
front-ends, possibly in other languages.

"apps" is a set of plugins that are loaded by default.  It builds
"libgnucap-default-plugins.so".  The ".cc" files here are mostly
independent of each other.  To add or remove one of them from the
build, just edit "Make1" and recompile.  Alternatively, any of them
can be extracted and built separately.

"modelgen" is the old model compiler, which now links to libgnucap.so.

Installation (still "make install") installs the parts as expected.
It also installs the header files in $PREFIX/include/gnucap, to build
plugins.

Although it does not use autoconf, the configure/make procedure is the
same as it would be with autoconf.

Model plugin tarballs have not been updated yet, but have been
repackaged for date consistency.

This snapshot lifts the biggest block that has been getting in the way
of a stable release.

