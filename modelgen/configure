#!/bin/sh
# configure for executable

mkdir -p O
#-------------  Stuff added to enable --prefix  --------------
if test "x$1" != "x"; then
    # echo Found input parameter -- $1
    #  Now see if the parameter is --prefix=
    if test "x${1#--prefix=}" != "x$1"; then
        # echo "Found --prefix in input args.  Setting prefix directory."
        prefix=${1#--prefix=}
    else
        # echo "Found unrecognized parameter in input args."
        #  Just use the default prefix dir.
        prefix=/usr/local
    fi
 
else
    # echo "No input parameter found."
    #  Just use the default prefix dir
    prefix=/usr/local
fi

sed -e "s#/usr/local#$prefix#" ../Makefile.template > Makefile

#----------------------------------------------------------------
echo "CCFLAGS = \\" >Make.ccflags
echo "-std=c++11 -DUNIX -O2 -DNDEBUG -I. -I../include -I../../include -W" >>Make.ccflags

echo "LIBS = \\" >Make.libs
echo "-lgnucap \\" >>Make.libs
echo "" >>Make.libs
echo "PREFIX = " $prefix >>Make.libs
echo "" >>Make.libs

cat <<CAT_EOF >Make.sys
#------------------------------------------------------------------------
VPATH = .:..
CCC = c++
TARGET_EXT =

LDFLAGS = -rdynamic \
-L../../lib/O

.SUFFIXES : .o .cc
.cc.o:; \$(CCC) \$(CXXFLAGS) \$(CPPFLAGS) \$(CCFLAGS) -c \$<
#------------------------------------------------------------------------
\$(TARGET): \$(OBJS)
	rm -f \$@
	\$(CCC) \$(CXXFLAGS) \$(CPPFLAGS) \$(CCFLAGS) \$(OBJS) -o \$@ \$(LIBS) \$(LDFLAGS)
#------------------------------------------------------------------------
CAT_EOF

echo \# created by $PWD/$0. do not edit >Make2
echo \#------------------------------------------------------------------------ >>Make2
cat Make.ccflags Make.libs Make.sys >>Make2
rm Make.ccflags Make.libs Make.sys

exit 0
